<Page x:Class="CallLogGIISDMDK.Views.FillAppeal.EditAppealByPersonalID"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:CallLogGIISDMDK.Views.FillAppeal"
      xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:gif="http://wpfanimatedgif.codeplex.com"
      
      mc:Ignorable="d" 
      Title="EditAppealByPersonalID" Loaded="Page_Loaded">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedPageCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="40"></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="78"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="401"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock Margin="40,10,0,0" Grid.ColumnSpan="4"  Style="{StaticResource MainTitles}">Добавить запись к обращению №</TextBlock>
            <TextBlock Grid.Column="1" Margin="5,10,0,0" Grid.ColumnSpan="4" Text="{Binding ID}"  Style="{StaticResource MainTitles}"/>
        </Grid>
        <Border x:Name="MainBorder" Grid.Row="1"  Margin="5" Grid.ColumnSpan="2"  BorderBrush="Gray" BorderThickness="1.5" >
            <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Hidden">
                <Grid x:Name="CenterGrid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="155*"/>
                        <ColumnDefinition Width="1189*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="260"></RowDefinition>
                        <RowDefinition Height="265"></RowDefinition>
                        <RowDefinition Height="220"></RowDefinition>
                        <RowDefinition Height="170"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid x:Name="TextAppeal" Margin="0,16,0,0"  Grid.ColumnSpan="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20"></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Label Content="Содержание" Grid.ColumnSpan="2" Style="{StaticResource titleAddingDataToAppealByID}"></Label>
                        <Grid Margin="10,0,10,0" Grid.Row="1">
                            <TextBox x:Name="Appeal" Margin="0" Padding="0"  Text="{Binding Appeal, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource AppealBig}"   AcceptsReturn="True" TextWrapping="Wrap" />
                        </Grid>
                    </Grid>
                    <Grid x:Name="CommonCenterGrid"  Grid.Row="1" Grid.ColumnSpan="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1.5*"></ColumnDefinition>
                            <ColumnDefinition ></ColumnDefinition>
                            <ColumnDefinition Width="250"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid  x:Name="Titles" Grid.ColumnSpan="3" Margin="0,0,0,2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1.5*"></ColumnDefinition>
                                <ColumnDefinition />
                                <ColumnDefinition Width="250"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Label   Content="Канал связи" Grid.ColumnSpan="2"  Style="{StaticResource titleAddingDataToAppealByID}"  ></Label>
                            <Label   Grid.Column="2" Content="Статус"   Style="{StaticResource titleAddingDataToAppealByID}" ></Label>
                            <Label   Grid.Column="1"   Content="Дата и время" Style="{StaticResource titleAddingDataToAppealByID}" ></Label>
                        </Grid>
                        <Border Grid.Row="1" x:Name="DateBorder" Grid.Column="1"   CornerRadius="5" Margin="19.8,0,20.4,0"   BorderBrush="Gray" BorderThickness="1"  >
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="1" Grid.Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="60"></RowDefinition>
                                        <RowDefinition ></RowDefinition>
                                    </Grid.RowDefinitions>
                                </Grid>
                                <Grid Margin="0,20,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="10"></RowDefinition>
                                        <RowDefinition Height="50"></RowDefinition>
                                        <RowDefinition Height="10"></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition></ColumnDefinition>
                                        <ColumnDefinition Width="10"></ColumnDefinition>
                                        <ColumnDefinition></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <StackPanel HorizontalAlignment="Right" Grid.Row="0" Grid.Column="0" Grid.RowSpan="4">
                                        <ComboBox  VerticalAlignment="top"  Style="{StaticResource ComboBoxTimeAppeal}" ItemsSource="{Binding HourAppeal}"  SelectedItem="{Binding CurrentHour}"    Height="50"  SelectedIndex="{Binding CurrentHour}"    >
                                        </ComboBox>
                                    </StackPanel>
                                    <StackPanel HorizontalAlignment="Left" Grid.Row="0" Grid.Column="2" Grid.RowSpan="4">
                                        <ComboBox x:Name="ComboBoxMinuteAppel" SelectionChanged="ComboBoxMinuteAppel_SelectionChanged" Style="{StaticResource ComboBoxTimeAppeal}" VerticalAlignment="top"  ItemsSource="{Binding MinuteAppeal}"  SelectedItem="{Binding CurrentMinute}"  Height="50" SelectedIndex="20">
                                        </ComboBox>
                                    </StackPanel>
                                    <Label Grid.Column="1" Content=":" Margin="2,6,0,0" FontFamily="Arial Black" Padding="0"  VerticalAlignment="top" Grid.Row="1" FontSize="17" Foreground="Black"></Label>
                                </Grid>
                                <StackPanel   Grid.Row="1"   >
                                    <ComboBox  VerticalAlignment="top"    ItemsSource="{Binding DaysCurrentMonth}"  SelectedItem="{Binding CurrentDay}"   Height="50"  SelectedIndex="20"    >
                                    </ComboBox>
                                </StackPanel>
                            </Grid>
                        </Border>


                        <!-- Status -->

                        <Border x:Name="StatusBorder"  Grid.Row="1" Grid.Column="2"   CornerRadius="5" Margin="19.8,0,20.4,0"   BorderBrush="Gray" BorderThickness="1"  >
                            <Grid x:Name="StatusGrid" >
                                <Grid.RowDefinitions>
                                    <RowDefinition ></RowDefinition>
                                    <RowDefinition ></RowDefinition>
                                </Grid.RowDefinitions>

                                <Grid Grid.Row="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="90"></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>

                                    <!-- Complete -->

                                    <Label Padding="0" x:Name="CompleteLabel"  Grid.Column="1"  Grid.Row="1"  Content="Завершено" Style="{StaticResource titleUnderGifAddingToAppeal}"></Label>
                                    <Image  Margin="14" Grid.Column="1"  Style="{StaticResource cursorHand}" Visibility="Hidden"  x:Name="completeenter" Loaded="LoadGif"></Image>
                                    <Image Margin="14" Source="complete.png" x:Name="Complete" Grid.Column="1" Style="{StaticResource cursorHand}" MouseEnter="Complete_MouseEnter"></Image>
                                    <Image Margin="14" Grid.Column="1" Style="{StaticResource cursorHand}" Visibility="Hidden"  x:Name="completehover" MouseLeave="Complete_MouseLeave" MouseDown="Complete_MouseDown" Loaded="LoadGif">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseDown" >
                                                <i:InvokeCommandAction Command="{Binding SetStatusAppealCommand}" CommandParameter="complete" >
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Image>
                                    <Image Grid.Column="1" Margin="14"  MouseEnter="Complete_MouseEnter" Visibility="Hidden"  x:Name="OffComplete"  Source="offComplete.png" Style="{StaticResource cursorHand}"></Image>
                                </Grid>

                                <!-- In Work-->

                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="90"></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>

                                    <Label  x:Name="InWorkLabel" Grid.Row="1"  Content="В работе" Style="{StaticResource titleUnderGifAddingToAppeal}"></Label>
                                    <Image  x:Name="inworkenter" Visibility="Hidden" Style="{StaticResource cursorHand}"     Loaded="LoadGif"></Image>
                                    <Image  Source="inWork.png" x:Name="InWork" Style="{StaticResource cursorHand}"  MouseEnter="InWork_MouseEnter"></Image>
                                    <Image  Visibility="Hidden" MouseDown="InWork_MouseDown" Style="{StaticResource cursorHand}"   MouseLeave="InWork_MouseLeave" x:Name="inworkhover" Loaded="LoadGif">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseDown" >
                                                <i:InvokeCommandAction Command="{Binding SetStatusAppealCommand}" CommandParameter="inWork" >
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Image>
                                    <Image Source="offInWork.png" x:Name="OffInWork" MouseEnter="InWork_MouseEnter" Visibility="Hidden" Style="{StaticResource cursorHand}"></Image>

                                </Grid>
                            </Grid>
                        </Border>

                        <!-- Choice phone or email   -->

                        <Border Grid.Row="1" CornerRadius="5" Margin="20,0,20.2,0" x:Name="PhoneEmailBorder"  BorderBrush="Gray" BorderThickness="1"    >
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition  Height="80"></RowDefinition>
                                    <RowDefinition Height="30"></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>

                                <Grid Margin="0,20,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition></ColumnDefinition>
                                        <ColumnDefinition></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <ComboBox  x:Name="CommunicationChannel" ItemsSource="{Binding CommunicationСhannels}" VerticalAlignment="top" SelectedItem="{Binding CommunicationСhannel}"   Height="50"  SelectedIndex="20"  DropDownOpened="CommunicationChannel_DropDownOpened"    >
                                    </ComboBox>

                                    <ComboBox Grid.Column="1"  x:Name="Route" Visibility="Hidden"  VerticalAlignment="top"  ItemsSource="{Binding Routes}"  SelectedItem="{Binding Route}"   Height="50"  SelectedIndex="20"   >
                                    </ComboBox>

                                </Grid>

                                <Label x:Name="DescriptionTypeConnect" Foreground="Chocolate" FontSize="13" Grid.Row="1" Visibility="Hidden" Style="{StaticResource titleAddingDataToAppealByID}"></Label>


                                <Grid  Grid.Row="2" >

                                    <Grid Margin="0,4,20,0"   x:Name="EmailGrid"  Visibility="Hidden" Grid.Column="1" >
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="55"></RowDefinition>
                                            <RowDefinition></RowDefinition>
                                            <RowDefinition></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <TextBox  x:Name="Email" Text="{Binding Email, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource AppealMini}"></TextBox>
                                        <!--<CheckBox Margin="10,2,15,0" Grid.Row="1"  HorizontalAlignment="Left" Grid.Column="1" x:Name="EditEmail" FontSize="13"  Style="{StaticResource StepsFillAppeal}" Click="EditEmail_Click">Изменить</CheckBox>-->
                                        <Label Height="0.1" x:Name="PromptEmail" Grid.Row="1" Style="{StaticResource promptsFillAppeal}"  Content="{Binding PromptsEmail}" ></Label>
                                    </Grid>

                                    <Grid  Margin="0,4,20,0"   x:Name="PhoneGrid" Visibility="Hidden"  Grid.Column="1">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="55"></RowDefinition>
                                            <RowDefinition Height="22"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="58"></ColumnDefinition>
                                            <ColumnDefinition></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <TextBox Grid.Column="{Binding PositionPhoneForm}" Grid.ColumnSpan="2" x:Name="Phone"    Text="{Binding Phone, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource AppealMini}" TextChanged="Phone_TextChanged" />
                                        <TextBox  Margin="10,0,0,0" Visibility="{Binding IsVisibleNumber7}"    x:Name="number7" IsEnabled="False"  Style="{StaticResource AppealMini}" Text="+7">
                                        </TextBox>
                                        <Grid Grid.Row="1" Grid.ColumnSpan="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition></ColumnDefinition>
                                                <ColumnDefinition></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <CheckBox Margin="10,2,0,0"  HorizontalAlignment="Left" x:Name="IsIrregular" FontSize="13"  Style="{StaticResource StepsFillAppeal}" IsEnabled="{Binding IsEnableIrregularCheck}"  IsChecked="{Binding IsIrregular}">Нестандартный номер</CheckBox>
                                            <!--<CheckBox Margin="10,2,15,0"  HorizontalAlignment="Right" Grid.Column="1" x:Name="EditPhone" FontSize="13"  Style="{StaticResource StepsFillAppeal}" Click="EditPhone_Click">Изменить</CheckBox>-->
                                            <!--<Label Grid.Row="1" Margin="0" Padding="0,2,20,0" HorizontalAlignment="Right" Grid.ColumnSpan="2" Foreground="Chocolate"   FontSize="14" VerticalAlignment="Top"  Content="Телефон" Style="{StaticResource titleBoxesFillAppeal}"></Label>-->
                                        </Grid>
                                    </Grid>
                                </Grid>




                            </Grid>




                            <!--<Grid  Margin="0,10,0,0" x:Name="PhoneEmailGrid">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="80"></RowDefinition>
                                    <RowDefinition Height="22"></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition ></ColumnDefinition>
                                    <ColumnDefinition ></ColumnDefinition>
                                    <ColumnDefinition ></ColumnDefinition>
                                    <ColumnDefinition ></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Grid Margin="0,20,0,0" Grid.Row="2" Grid.ColumnSpan="4">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="160"></ColumnDefinition>
                                        <ColumnDefinition></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Grid Margin="0,0,20,0"   x:Name="EmailGrid" Visibility="Hidden" Grid.Column="1" >
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="43"></RowDefinition>
                                            <RowDefinition></RowDefinition>
                                            <RowDefinition></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <TextBox IsEnabled="False"  x:Name="Email" Text="{Binding Email, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource AddingDataToAppeal}"></TextBox>
                                        <Label Grid.Row="1" Style="{StaticResource promptsFillAppeal}"  Content="{Binding PromptsEmail}" ></Label>
                                        <CheckBox Margin="10,2,15,0" Grid.Row="1"  HorizontalAlignment="Right" Grid.Column="1" x:Name="EditEmail" FontSize="13"  Style="{StaticResource StepsFillAppeal}" Click="EditEmail_Click">Изменить</CheckBox>
                                        -->
                            <!--<Label Grid.Row="1" Margin="0" Padding="0,2,20,0" HorizontalAlignment="Right" Foreground="#001A86"   FontSize="14" VerticalAlignment="Top"  Content="Почта" Style="{StaticResource titleBoxesFillAppeal}"></Label>-->
                            <!--
                                    </Grid>
                                    <Label Margin="0,8,0,0" x:Name="TypeConnectLabel" HorizontalAlignment="Right"  Foreground="Black" Visibility="Hidden" FontSize="14"   Content="" Style="{StaticResource titleUnderGifAddingToAppeal}"></Label>
                                    <Grid Margin="0,0,20,0"   x:Name="PhoneGrid" Visibility="Hidden"  Grid.Column="1">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="43"></RowDefinition>
                                            <RowDefinition Height="22"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="58"></ColumnDefinition>
                                            <ColumnDefinition></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <TextBox Grid.Column="{Binding PositionPhoneForm}" Grid.ColumnSpan="2" IsEnabled="False" x:Name="Phone"    Text="{Binding Phone, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource AddingDataToAppeal}" TextChanged="Phone_TextChanged" />
                                        <TextBox  Margin="10,0,0,0" Visibility="{Binding IsVisibleNumber7}"    x:Name="number7" IsEnabled="False"  Style="{StaticResource AddingDataToAppeal}" Text="+7">
                                        </TextBox>
                                        <Grid Grid.Row="1" Grid.ColumnSpan="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition></ColumnDefinition>
                                                <ColumnDefinition></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <CheckBox Margin="10,2,0,0"  HorizontalAlignment="Left" x:Name="IsIrregular" FontSize="13"  Style="{StaticResource StepsFillAppeal}" IsEnabled="{Binding IsEnableIrregularCheck}"  IsChecked="{Binding IsIrregular}">Нестандартный номер</CheckBox>
                                            <CheckBox Margin="10,2,15,0"  HorizontalAlignment="Right" Grid.Column="1" x:Name="EditPhone" FontSize="13"  Style="{StaticResource StepsFillAppeal}" Click="EditPhone_Click">Изменить</CheckBox>
                                            -->
                            <!--<Label Grid.Row="1" Margin="0" Padding="0,2,20,0" HorizontalAlignment="Right" Grid.ColumnSpan="2" Foreground="#001A86"   FontSize="14" VerticalAlignment="Top"  Content="Телефон" Style="{StaticResource titleBoxesFillAppeal}"></Label>-->
                            <!--
                                        </Grid>
                                    </Grid>
                                </Grid>
                                <StackPanel Grid.Column="2" Grid.RowSpan="2"   Orientation="Horizontal">
                                    <Separator Background="LightSlateGray" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                                </StackPanel>
                              
                                <Label x:Name="OutPhoneLabel" Grid.Column="1" Grid.Row="1"  Content="Исходящий звонок" Style="{StaticResource titleUnderGifAddingToAppeal}"></Label>
                                <Image  Grid.Column="1" Style="{StaticResource cursorHand}" x:Name="outgoingphone"  MouseEnter="Load_Gif" ></Image>
                                <Image  Grid.Column="1" Style="{StaticResource cursorHand}" x:Name="outgoingphonehover"  MouseEnter="Load_Gif" >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDown" >
                                            <i:InvokeCommandAction Command="{Binding SetTypeConnectCommand}" CommandParameter="out" >
                                            </i:InvokeCommandAction>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Image>
                                <Image Grid.Column="1" Style="{StaticResource cursorHand}" x:Name="outgoingphoneenter" MouseEnter="Load_Gif" ></Image>
                                <Image Grid.Column="1" Source="offPhone.png"></Image>

                                <Label Name="InPhoneLabel"  Grid.Row="1"   Content="Входящий звонок" Style="{StaticResource titleUnderGifAddingToAppeal}"></Label>
                                <Image Style="{StaticResource cursorHand}" x:Name="incomingphone" ></Image>
                                <Image Style="{StaticResource cursorHand}" x:Name="incomingphonehover" MouseEnter="Load_Gif" >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDown" >
                                            <i:InvokeCommandAction Command="{Binding SetTypeConnectCommand}" CommandParameter="in" >
                                            </i:InvokeCommandAction>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Image>
                                <Image  Style="{StaticResource cursorHand}" x:Name="incomingphoneenter" MouseEnter="Load_Gif" ></Image>
                                <Image  Style="{StaticResource cursorHand}"  Source="offPhone.png">
                                </Image>
                                
                                <Label  x:Name="OutEmailLabel" Grid.Column="2"  Grid.Row="1"  Content="Исходящая почта" Style="{StaticResource titleUnderGifAddingToAppeal}"></Label>
                                <Image Grid.Column="2"  Style="{StaticResource cursorHand}" x:Name="outgoingemail"  MouseEnter="Load_Gif" ></Image>
                                <Image Grid.Column="2"  Style="{StaticResource cursorHand}" x:Name="outgoingemailhover" MouseEnter="Load_Gif" >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDown" >
                                            <i:InvokeCommandAction Command="{Binding SetTypeConnectCommand}" CommandParameter="outEmail" >
                                            </i:InvokeCommandAction>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Image>
                                <Image Grid.Column="2"  Style="{StaticResource cursorHand}" x:Name="outgoingemailenter" MouseEnter="Load_Gif" ></Image>
                                <Image Grid.Column="2" Style="{StaticResource cursorHand}" Source="offEmail.png"></Image>
                              
                                <Label  x:Name="InEmainLabel" Grid.Column="3" Grid.Row="1"  Content="Входящая почта" Style="{StaticResource titleUnderGifAddingToAppeal}"></Label>
                                <Image Grid.Column="3" Style="{StaticResource cursorHand}" x:Name="incomingemailgif" MouseEnter="Load_Gif" ></Image>
                                <Image Grid.Column="3"  Style="{StaticResource cursorHand}" x:Name="incomingemailhover" MouseEnter="Load_Gif"  >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDown" >
                                            <i:InvokeCommandAction Command="{Binding SetTypeConnectCommand}" CommandParameter="inEmail" >
                                            </i:InvokeCommandAction>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Image>
                                <Image Grid.Column="3" Style="{StaticResource cursorHand}" x:Name="incomingemailenter" MouseEnter="Load_Gif"  ></Image>
                                <Image Grid.Column="3"   Style="{StaticResource cursorHand}" Source="offEmail.png"></Image>
                            </Grid>-->
                        </Border>
                    </Grid>
                    <Grid Grid.Row="2" Grid.ColumnSpan="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Label   Content="Характер обращения" Style="{StaticResource titleAddingDataToAppealByID}"></Label>
                        <Border Margin="20,2,20,20"  Grid.Row="1" x:Name="TypeAppealBorder"  CornerRadius="5"  Grid.ColumnSpan="3" BorderBrush="Gray" BorderThickness="1.2" >
                            <Grid >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1"></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Button Grid.Row="1" >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDown" >
                                            <i:InvokeCommandAction Command="{Binding AddTypeAppealCommand}" CommandParameter="Информационная консультация" >
                                            </i:InvokeCommandAction>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Cursor" Value="Hand" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <Button.Template>
                                        <ControlTemplate TargetType ="{x:Type Button}">
                                            <Grid RenderTransformOrigin="0.5,0.5" x:Name="RootGrid" MouseDown="RootGrid_MouseDown">
                                                <Rectangle  x:Name="typeAppealColorButton1" Fill="LightGray" Margin="10" RadiusX="2" RadiusY="2">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="MouseDown" >
                                                            <i:InvokeCommandAction Command="{Binding AddTypeAppealCommand}" CommandParameter="Информационная консультация" >
                                                            </i:InvokeCommandAction>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Rectangle>
                                                <Label   Style="{StaticResource typeAppeal}"  Content="Информационная консультация">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="MouseDown" >
                                                            <i:InvokeCommandAction Command="{Binding AddTypeAppealCommand}" CommandParameter="Информационная консультация" >
                                                            </i:InvokeCommandAction>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Label>
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property ="IsPressed" Value ="True">
                                                    <Setter TargetName="RootGrid" Property="RenderTransform">
                                                        <Setter.Value>
                                                            <ScaleTransform ScaleX="0.97" ScaleY="0.97"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                                <Button Grid.Row="1" Grid.Column="1" >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDown" >
                                            <i:InvokeCommandAction Command="{Binding AddTypeAppealCommand}" CommandParameter="Сертификат" >
                                            </i:InvokeCommandAction>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Cursor" Value="Hand" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <Button.Template>
                                        <ControlTemplate TargetType ="{x:Type Button}">
                                            <Grid RenderTransformOrigin="0.5,0.5" x:Name="RootGrid" MouseDown="RootGrid_MouseDown">
                                                <Rectangle x:Name="typeAppealColorButton1" Fill="LightGray" Margin="10" RadiusX="2" RadiusY="2">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="MouseDown" >
                                                            <i:InvokeCommandAction Command="{Binding AddTypeAppealCommand}" CommandParameter="Сертификат" >
                                                            </i:InvokeCommandAction>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Rectangle>
                                                <Label   Style="{StaticResource typeAppeal}"  Content="Сертификат">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="MouseDown" >
                                                            <i:InvokeCommandAction Command="{Binding AddTypeAppealCommand}" CommandParameter="Сертификат" >
                                                            </i:InvokeCommandAction>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Label>
                                                <!--<Ellipse x:Name ="OuterRing" Width ="40" Height ="40" Fill="{TemplateBinding Background}"/>-->
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property ="IsPressed" Value ="True">
                                                    <Setter TargetName="RootGrid" Property="RenderTransform">
                                                        <Setter.Value>
                                                            <ScaleTransform ScaleX="0.97" ScaleY="0.97"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                                <Button Grid.Row="1" Grid.Column="2" >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDown" >
                                            <i:InvokeCommandAction Command="{Binding AddTypeAppealCommand}" CommandParameter="Ошибка" >
                                            </i:InvokeCommandAction>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Cursor" Value="Hand" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <Button.Template>
                                        <ControlTemplate TargetType ="{x:Type Button}">
                                            <Grid RenderTransformOrigin="0.5,0.5" x:Name="RootGrid" MouseDown="RootGrid_MouseDown">
                                                <Rectangle x:Name="typeAppealColorButton1" Fill="LightGray" Margin="10" RadiusX="2" RadiusY="2">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="MouseDown" >
                                                            <i:InvokeCommandAction Command="{Binding AddTypeAppealCommand}" CommandParameter="Ошибка" >
                                                            </i:InvokeCommandAction>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Rectangle>
                                                <Label   Style="{StaticResource typeAppeal}"  Content="Ошибка">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="MouseDown" >
                                                            <i:InvokeCommandAction Command="{Binding AddTypeAppealCommand}" CommandParameter="Ошибка" >
                                                            </i:InvokeCommandAction>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Label>
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property ="IsPressed" Value ="True">
                                                    <Setter TargetName="RootGrid" Property="RenderTransform">
                                                        <Setter.Value>
                                                            <ScaleTransform ScaleX="0.97" ScaleY="0.97"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                                <Button Grid.Row="2"  >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDown" >
                                            <i:InvokeCommandAction Command="{Binding AddTypeAppealCommand}" CommandParameter="Техническая консультация" >
                                            </i:InvokeCommandAction>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Cursor" Value="Hand" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <Button.Template>
                                        <ControlTemplate TargetType ="{x:Type Button}">
                                            <Grid RenderTransformOrigin="0.5,0.5" x:Name="RootGrid" MouseDown="RootGrid_MouseDown">
                                                <Rectangle x:Name="typeAppealColorButton1" Fill="LightGray" Margin="10" RadiusX="2" RadiusY="2">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="MouseDown" >
                                                            <i:InvokeCommandAction Command="{Binding AddTypeAppealCommand}" CommandParameter="Техническая консультация" >
                                                            </i:InvokeCommandAction>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Rectangle>
                                                <Label   Style="{StaticResource typeAppeal}"  Content="Техническая консультация">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="MouseDown" >
                                                            <i:InvokeCommandAction Command="{Binding AddTypeAppealCommand}" CommandParameter="Техническая консультация" >
                                                            </i:InvokeCommandAction>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Label>
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property ="IsPressed" Value ="True">
                                                    <Setter TargetName="RootGrid" Property="RenderTransform">
                                                        <Setter.Value>
                                                            <ScaleTransform ScaleX="0.97" ScaleY="0.97"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                                <Button Grid.Row="2" Grid.Column="1" >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDown" >
                                            <i:InvokeCommandAction Command="{Binding AddTypeAppealCommand}" CommandParameter="Жалоба" >
                                            </i:InvokeCommandAction>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Cursor" Value="Hand" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <Button.Template>
                                        <ControlTemplate TargetType ="{x:Type Button}">
                                            <Grid RenderTransformOrigin="0.5,0.5" x:Name="RootGrid" MouseDown="RootGrid_MouseDown">
                                                <Rectangle x:Name="typeAppealColorButton1" Fill="LightGray" Margin="10" RadiusX="2" RadiusY="2">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="MouseDown" >
                                                            <i:InvokeCommandAction Command="{Binding AddTypeAppealCommand}" CommandParameter="Жалоба" >
                                                            </i:InvokeCommandAction>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Rectangle>
                                                <Label   Style="{StaticResource typeAppeal}"  Content="Жалоба">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="MouseDown" >
                                                            <i:InvokeCommandAction Command="{Binding AddTypeAppealCommand}" CommandParameter="Жалоба" >
                                                            </i:InvokeCommandAction>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Label>
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property ="IsPressed" Value ="True">
                                                    <Setter TargetName="RootGrid" Property="RenderTransform">
                                                        <Setter.Value>
                                                            <ScaleTransform ScaleX="0.97" ScaleY="0.97"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                                <Button Grid.Row="2" Grid.Column="2" >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDown" >
                                            <i:InvokeCommandAction Command="{Binding AddTypeAppealCommand}" CommandParameter="Пожелание" >
                                            </i:InvokeCommandAction>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Cursor" Value="Hand" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <Button.Template>
                                        <ControlTemplate TargetType ="{x:Type Button}">
                                            <Grid RenderTransformOrigin="0.5,0.5" x:Name="RootGrid" MouseDown="RootGrid_MouseDown">
                                                <Rectangle x:Name="typeAppealColorButton1" Fill="LightGray" Margin="10" RadiusX="2" RadiusY="2">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="MouseDown" >
                                                            <i:InvokeCommandAction Command="{Binding AddTypeAppealCommand}" CommandParameter="Пожелание" >
                                                            </i:InvokeCommandAction>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Rectangle>
                                                <Label   Style="{StaticResource typeAppeal}"  Content="Пожелание">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="MouseDown" >
                                                            <i:InvokeCommandAction Command="{Binding AddTypeAppealCommand}" CommandParameter="Пожелание" >
                                                            </i:InvokeCommandAction>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Label>
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property ="IsPressed" Value ="True">
                                                    <Setter TargetName="RootGrid" Property="RenderTransform">
                                                        <Setter.Value>
                                                            <ScaleTransform ScaleX="0.97" ScaleY="0.97"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                                <!--<Label x:Name="PromptTypeAppel" Grid.Row="3" Style="{StaticResource promptsFillAppeal}"  Content="{Binding PromptsType}" ></Label>-->
                            </Grid>
                        </Border>
                    </Grid>

                    <Grid Grid.Row="3" Grid.ColumnSpan="2" Margin="0,0,0,0.4">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"></RowDefinition>
                            <RowDefinition ></RowDefinition>
                        </Grid.RowDefinitions>
                        <Label Content="Дополнительная информация" HorizontalAlignment="Left" Grid.ColumnSpan="2" Style="{StaticResource titleAddingDataToAppealByID}"></Label>
                        <Grid Grid.Row="1" Margin="10,2,10,10">
                            <TextBox Text="{Binding AdditionalInfo, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource AppealBig}" AcceptsReturn="True" TextWrapping="Wrap" />
                        </Grid>
                    </Grid>
                </Grid>
            </ScrollViewer>
        </Border>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition Width="1.5*"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Button x:Name="CancelAdding"  Style="{StaticResource MainMenuButton}" Click="CancelAdding_Click" >Отмена</Button>
            <Button Grid.Column="2" MouseLeave="AddDataToCurrentAppeal_MouseLeave"  x:Name="AddDataToCurrentAppeal" IsCancel="{Binding IsValidAddingDataToAppeal}" Command="{Binding AddDataToCurrentAppealCommmand}"  Style="{StaticResource MainMenuButton}" Click="AddDataToCurrentAppeal_Click"  >Добавить запись</Button>
        </Grid>
    </Grid>
</Page>
 
