<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CallLogGIISDMDK"
                    xmlns:VM="clr-namespace:CallLogGIISDMDK.ViewModels"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <!-- COLORS-->
    <SolidColorBrush x:Key="BorderBrushComboBox" Color="DimGray" />
    <LinearGradientBrush x:Key="BackgroundBrushComboBox" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="AliceBlue" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="BackgroundBrushPopUpComboBox" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="White" Offset="1"/>
        <GradientStop Color="AliceBlue" Offset="0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ArrowBrushComboBox" Color="#757575" />
    <SolidColorBrush x:Key="DisabledBorderBrushComboBox" Color="#FF919191" />
    <LinearGradientBrush x:Key="DisabledBackgroundComboBox" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#f4f4f4" Offset="0"/>
        <GradientStop Color="#d7d7d7" Offset="0.7"/>
        <GradientStop Color="#c2c2c2" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="DisabledForegroundComboBox" Color="#aaaaaa" />
    <SolidColorBrush x:Key="HoverBorderBrush" Color="Black" />
    <LinearGradientBrush x:Key="HoverBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#da5e69" Offset="0"/>
        <GradientStop Color="#d12e27" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HoverToggleBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="White" Offset="0"></GradientStop>
        <GradientStop Color="AliceBlue" Offset="1"></GradientStop>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HoverItemComboBox" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="LightGray" Offset="0"></GradientStop>
        <GradientStop Color="LightGray" Offset="1"></GradientStop>
    </LinearGradientBrush>
    <Color x:Key="detailMark">#FFA1A9B3</Color>
    <SolidColorBrush x:Key="detailMarkBrush" Color="{StaticResource ResourceKey=detailMark}" />
    <!-- TEXTBLOCK-->
    <!-- TEXTBLOCK-->
    <!-- TEXTBLOCK-->

    <Style TargetType="{x:Type TextBlock}" x:Key="MainTitles">
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontFamily" Value="Trebuchet MS"/>
        <Setter Property="Margin" Value="15"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="DetailsViewAppeal">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontFamily" Value="Trebuchet MS"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="TitlesViewAppeal">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Foreground" Value="DimGray"/>
        <Setter Property="FontFamily" Value="Trebuchet MS"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Margin" Value="4,1,0,0"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="DataAppeal">
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontFamily" Value="Trebuchet MS"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Margin" Value="10,14,0,0"/>
    </Style>

    <!--BUTTONS-->
    <!--BUTTONS-->
    <!--BUTTONS-->
    <Style TargetType="{x:Type Button}" x:Key="MainMenuButton">
        <Setter Property="Background" Value="Green"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5"
                                Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Background" Value="#006666"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="White"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Background" Value="#00433A"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="myButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentControl>
                        <Grid>
                            <Border Name="PressedBorder" BorderBrush="Gray" BorderThickness="1,1,2,2">
                                <ContentPresenter/>
                            </Border>
                            <Border Name="NormalBorder" BorderBrush="Black"  BorderThickness="2"/>
                        </Grid>
                    </ContentControl>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsPressed" Value="True" >
                            <Setter TargetName="NormalBorder" Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="TypeAppeal">
        <Setter Property="Background" Value="Gray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5"
                                Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Background" Value="Gray"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="White"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Background" Value="LightSlateGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="Back">
        <Setter Property="Background" Value="Green"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5"
                                Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="#006666"/>
        <Setter Property="Margin" Value="10"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Background" Value="#00433A"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="TopPanel">
        <Setter Property="Background" Value="Green"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5"
                                Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Background" Value="#006666"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="White"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />

            </Trigger>
        </Style.Triggers>
    </Style>

    <!--BORDER-->
    <!--BORDER-->
    <!--BORDER-->
    <Style x:Key="CommonInformation" TargetType="Border">
        <Setter Property="CornerRadius" Value="2"></Setter>
        <Setter Property="BorderBrush" Value="Gray"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
    </Style>

    <!--IMAGES-->
    <!--IMAGES-->
    <!--IMAGES-->

    <Style x:Key="cursorHand" TargetType="{x:Type Image}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>



    <!-- RICHTEXTBLOCKS-->
    <!-- RICHTEXTBLOCKS-->
    <!-- RICHTEXTBLOCKS-->

    <Style x:Key="TextBlocks" TargetType="{x:Type RichTextBox}">
        <Setter Property="BorderBrush" Value="{x:Null}"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Block.LineHeight" Value="4"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="Margin" Value="8,10,0,0"></Setter>
    </Style>

    <!-- TEXT BOXES-->
    <!-- TEXT BOXES-->
    <!-- TEXT BOXES-->

    <Style x:Key="AppealMini" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="55"></Setter>
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="Margin" Value="10,0,8,0"></Setter>

        <Setter Property="FontSize" Value="27"></Setter>
        <Setter Property="FontFamily" Value="Calibri,Arial"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="DropDownBorder" Background="{StaticResource BackgroundBrushPopUpComboBox}" BorderThickness="1,1,1,1" CornerRadius="3" Margin="0,3,0,3"
                                        BorderBrush="{StaticResource BorderBrushComboBox}"/>
                        <!--<Rectangle x:Name="border"  Stroke="{StaticResource ResourceKey=detailMarkBrush}" StrokeThickness="1"/>-->
                        <TextBox  Margin="10" Text="{Binding  RelativeSource={RelativeSource TemplatedParent}, Path=Text, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="DropDownBorder" Property="Background" Value="{StaticResource HoverToggleBackground}" />
                            <Setter TargetName="DropDownBorder" Property="BorderThickness" Value="1" />
                            <Setter TargetName="DropDownBorder" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AddingDataToAppeal" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="44"></Setter>
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="Margin" Value="10,0,8,0"></Setter>
        <Setter Property="FontSize" Value="21"></Setter>
        <Setter Property="FontFamily" Value="Calibri,Arial"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="DropDownBorder" Background="{StaticResource BackgroundBrushPopUpComboBox}" BorderThickness="1,1,1,1" CornerRadius="3" Margin="0,3,0,3"
                                        BorderBrush="{StaticResource BorderBrushComboBox}"/>
                        <!--<Rectangle x:Name="border"  Stroke="{StaticResource ResourceKey=detailMarkBrush}" StrokeThickness="1"/>-->
                        <TextBox  Margin="10" Text="{Binding  RelativeSource={RelativeSource TemplatedParent}, Path=Text, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="DropDownBorder" Property="Background" Value="{StaticResource HoverToggleBackground}" />
                            <Setter TargetName="DropDownBorder" Property="BorderThickness" Value="1" />
                            <Setter TargetName="DropDownBorder" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBlock" TargetType="{x:Type TextBox}">
        <Setter Property="BorderBrush" Value="{x:Null}"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Block.LineHeight" Value="4"></Setter>
        <Setter Property="TextAlignment" Value="Left"></Setter>
        <Setter Property="TextWrapping" Value="Wrap"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="Margin" Value="8,10,0,0"></Setter>
    </Style>
    <Style x:Key="AppealBig" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="10,0,8,0"></Setter>
        <Setter Property="FontSize" Value="22"></Setter>
        <Setter Property="TextWrapping" Value="Wrap"></Setter>
        <Setter Property="FontFamily" Value="Calibri,Arial"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="DropDownBorder" Background="{StaticResource BackgroundBrushPopUpComboBox}" BorderThickness="1,1,1,1" CornerRadius="3" Margin="0,3,0,3"
                                        BorderBrush="{StaticResource BorderBrushComboBox}"/>
                        <!--<Rectangle x:Name="border"  Stroke="{StaticResource ResourceKey=detailMarkBrush}" StrokeThickness="1"/>-->
                        <TextBox  TextWrapping="Wrap" AcceptsReturn="True"  Margin="10" Text="{Binding  RelativeSource={RelativeSource TemplatedParent}, Path=Text, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="DropDownBorder" Property="Background" Value="{StaticResource HoverToggleBackground}" />
                            <Setter TargetName="DropDownBorder" Property="BorderThickness" Value="1" />
                            <Setter TargetName="DropDownBorder" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- LIST BOXES-->
    <!-- LIST BOXES-->
    <!-- LIST BOXES-->

    <SolidColorBrush x:Key="BorderInExpanderBackgroundKey"  Color="Bisque"/>
    <SolidColorBrush x:Key="ListBoxBackgroundKey"  Color="#FFFBEEDB"/>
    <SolidColorBrush x:Key="BorderBackgroundKey"  Color="#F2F2F2"/>
    <DropShadowEffect x:Key="DropShadowEffectKey" Opacity="0.5"/>
    <Style x:Key="BorderBackgroundItemsStyleKey" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource BorderBackgroundKey}" />
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="Margin" Value="0,1,0,1" />
        <Setter Property="Effect" Value="{StaticResource DropShadowEffectKey}"/>
    </Style>
    <Style x:Key="ListBoxBackgroundStyleKey"  TargetType="ListBox">
        <Setter Property="Background" Value="{StaticResource ListBoxBackgroundKey}" />
    </Style>
    <!-- GRID-->
    <!-- GRID-->
    <!-- GRID-->
    <!-- Показывает Grid только при наведении на него -->
    <Style x:Key="hider" TargetType="{x:Type Grid}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Opacity" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- CHECK BOXES-->
    <!-- CHECK BOXES-->
    <!-- CHECK BOXES-->
    <Style TargetType="CheckBox" x:Key="StepsFillAppeal">

        <Setter Property="FontSize" Value="12" ></Setter>
        <Setter Property="Foreground" Value="DimGray" ></Setter>
        <Setter Property="FontSize" Value="16" ></Setter>
        <Setter Property="VerticalAlignment" Value="Top" ></Setter>
        <Setter Property="Margin" Value="12,4,0,0" ></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <CheckBox Content="{Binding  RelativeSource={RelativeSource TemplatedParent},Path=Content}" IsChecked="{Binding  RelativeSource={RelativeSource TemplatedParent},Path=IsChecked}">
                        <CheckBox.LayoutTransform>
                            <ScaleTransform ScaleX="1.2" ScaleY="1.2" />
                        </CheckBox.LayoutTransform>
                    </CheckBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- LABELS-->
    <!-- LABELS-->
    <!-- LABELS-->

    <Style TargetType="{x:Type Label}" x:Key="typeAppeal">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontFamily" Value="Franklin Gothic Medium"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="Black"></Setter>
    </Style>
    <Style TargetType="{x:Type Label}" x:Key="titleBoxesFillAppeal">

        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Margin" Value="8,8,4,4"/>
        <Setter Property="FontFamily" Value="Franklin Gothic Medium"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="#693B00"/>
    </Style>
    <Style TargetType="{x:Type Label}" x:Key="titleUnderGifAddingToAppeal">
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="Franklin Gothic Medium"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Foreground" Value="DimGray"/>

    </Style>

    <Style TargetType="{x:Type Label}" x:Key="titleAddingDataToAppealByID">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="28,0,0,0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>

        <Setter Property="VerticalAlignment" Value="Bottom"/>
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="promptsFillAppeal">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="15,2,15,0"/>
        <Setter Property="FontFamily" Value="Franklin Gothic Medium"/>
        <Setter Property="Foreground" Value="Chocolate"/>
        <Setter Property="Padding" Value="4,0,0,0"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="VerticalAlignment" Value="Top"/>

    </Style>
    <Style TargetType="{x:Type Label}" x:Key="titleAddingAppeal">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="8,8,0,0"/>
        <Setter Property="FontFamily" Value="Franklin Gothic Medium"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Foreground" Value="DimGray"/>
    </Style>
    <!--SCROLL BAR-->
    <!--SCROLL BAR-->
    <!--SCROLL BAR-->
    <Style x:Key="{x:Type ScrollViewer}" 
    TargetType="{x:Type ScrollViewer}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" 
                Value="false">
                <Setter Property="Foreground" 
                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- COMBO   BOX -->
    <!-- COMBO   BOX -->
    <!-- COMBO   BOX -->

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="24" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="5" Background="{StaticResource HoverToggleBackground}" 
                    BorderBrush="{StaticResource BorderBrushComboBox}" BorderThickness="1" />
            <Border x:Name="BorderToggle" Grid.Column="0" CornerRadius="3,0,0,3" Background="{StaticResource BackgroundBrushComboBox}"
                    BorderBrush="{StaticResource BorderBrushComboBox}" Margin="1" BorderThickness="0,0,1,0" />
            <Path x:Name="Arrow" Grid.Column="1" Fill="{StaticResource ArrowBrushComboBox}" HorizontalAlignment="Center" VerticalAlignment="Center"
                  Data="M -2 0 L 2 4 L 6 0 Z"/>
        </Grid>
        <ControlTemplate.Triggers>

            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource HoverToggleBackground}" />
                <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundComboBox}" />
                <Setter TargetName="BorderToggle" Property="Background" Value="{StaticResource DisabledBackgroundComboBox}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrushComboBox}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundComboBox}"/>
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledBorderBrushComboBox}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>
    <Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="FontFamily" Value="Calibri,Arial"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Margin" Value="10,2,10,0"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>

        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsVirtualizing="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"  Margin="6,3,23,3" VerticalAlignment="Center"
                                          HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" 
                                 VerticalAlignment="Center" Margin="6,3,23,3" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False"
                               PopupAnimation="Slide" Margin="3,-8,-3,8">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="{StaticResource BackgroundBrushPopUpComboBox}" BorderThickness="1,1,1,1" CornerRadius="3" Margin="0,3,0,3"
                                        BorderBrush="{StaticResource BorderBrushComboBox}"/>
                                <!--***Scroll***-->
                                <ScrollViewer  Margin="0,3" SnapsToDevicePixels="True">

                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundComboBox}"/>
                            <Setter Property="Background" Value="{StaticResource DisabledBackgroundComboBox}"/>
                            <Setter Property="Opacity" Value="0.72"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <Style x:Key="FillingAppeal" TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>

        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="Margin" Value="10,0,10,0"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="MinHeight" Value="20"/>

        <Setter Property="FontFamily" Value="Calibri,Arial"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="IsEditable" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                             TextWrapping="Wrap"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">
                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                               
                                Background="Linen"
                                BorderThickness="1"
                                BorderBrush="Gray"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <Style x:Key="ComboBoxTimeAppeal" TargetType="ComboBox">
        <Setter Property="Width" Value="80"/>
        <Setter Property="Height" Value="26"/>

        <Setter Property="FontFamily" Value="Calibri,Arial"/>
        <Setter Property="FontSize" Value="27"/>
        <Setter Property="Margin" Value="0,2,0,0"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsVirtualizing="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"  Margin="-2,3,23,3" VerticalAlignment="Center"
                                          HorizontalAlignment="Center" />
                        <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Center" 
                                 VerticalAlignment="Center" Margin="6,3,23,3" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False"
                               PopupAnimation="Slide" Margin="3,-8,-3,8">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="{StaticResource BackgroundBrushPopUpComboBox}" BorderThickness="1,1,1,1" CornerRadius="3" Margin="0,3,0,3"
                                        BorderBrush="{StaticResource BorderBrushComboBox}"/>
                                <!--***Scroll***-->
                                <ScrollViewer  Margin="0,3" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundComboBox}"/>
                            <Setter Property="Background" Value="{StaticResource DisabledBackgroundComboBox}"/>
                            <Setter Property="Opacity" Value="0.72"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>
    <!-- ComboBoxItem -->
    <!--<Style x:Key="{x:Type ComboBoxItem}" TargetType="ComboBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Name="Border" Padding="2" BorderThickness="1" SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource HoverItemComboBox}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundComboBox}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
</ResourceDictionary>
